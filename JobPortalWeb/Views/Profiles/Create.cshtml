@model JobPortalWeb.Data.Profile

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
 
<h4>@ViewBag.Message</h4>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-container">
        <h4>Profile</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-field-container">
            @Html.LabelFor(model => model.FullName, htmlAttributes: new { @class = "control-label" })
            <div class="control-container">
                @Html.EditorFor(model => model.FullName, new { htmlAttributes = new { @class = "generic-control" } })
                @Html.ValidationMessageFor(model => model.FullName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-field-container">
            @Html.LabelFor(model => model.Birthdate, htmlAttributes: new { @class = "control-label" })
            <div class="control-container">
                @Html.EditorFor(model => model.Birthdate, new { htmlAttributes = new { @class = "generic-control" , type="date" } })
                @Html.ValidationMessageFor(model => model.Birthdate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-field-container">
            @Html.LabelFor(model => model.GenderId, "GenderId", htmlAttributes: new { @class = "control-label" })
            <div class="control-container">
                @Html.DropDownList("GenderId", null, htmlAttributes: new { @class = "generic-control" })
                @Html.ValidationMessageFor(model => model.GenderId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-field-container">
            @Html.LabelFor(model => model.NationalityId, "NationalityId", htmlAttributes: new { @class = "control-label" })
            <div class="control-container">
                @Html.DropDownList("NationalityId", null, htmlAttributes: new { @class = "generic-control" })
                @Html.ValidationMessageFor(model => model.NationalityId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-field-container">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label" })
            <div class="control-container">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "generic-control" , type="email" , disabled ="true"} })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-field-container hidden">
            @Html.LabelFor(model => model.UserId, htmlAttributes: new { @class = "control-label" })
            <div class="control-container">
                @Html.EditorFor(model => model.UserId, new { htmlAttributes = new { @class = "generic-control" } })
                @Html.ValidationMessageFor(model => model.UserId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-field-container">
            @Html.LabelFor(model => model.MobileNumber, htmlAttributes: new { @class = "control-label" })
            <div class="control-container">
                @Html.EditorFor(model => model.MobileNumber, new { htmlAttributes = new { @class = "generic-control" , type = "tel" } })
                @Html.ValidationMessageFor(model => model.MobileNumber, "", new { @class = "text-danger" })
                
            </div>
        </div>

        <div class="form-field-container">
            @Html.LabelFor(model => model.FullAddress, htmlAttributes: new { @class = "control-label" })
            <div class="control-container">
                @Html.EditorFor(model => model.FullAddress, new { htmlAttributes = new { @class = "generic-control" } })
                @Html.ValidationMessageFor(model => model.FullAddress, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-field-container">
            @Html.LabelFor(model => model.CoverLetter, htmlAttributes: new { @class = "control-label" })
            <div class="control-container">
                @Html.EditorFor(model => model.CoverLetter, new { htmlAttributes = new { @class = "generic-control" } })
                @Html.ValidationMessageFor(model => model.CoverLetter, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-field-container">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Next" class="btn btn-default" />
            </div>
        </div>
    </div>
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
